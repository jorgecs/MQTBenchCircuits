from qiskit import QuantumCircuit, QuantumRegister, ClassicalRegister
from qiskit import execute, Aer
import numpy as np

backend = Aer.get_backend('qasm_simulator')

shots = 10000

qc = QuantumCircuit()

q = QuantumRegister(14, 'q')
meas = ClassicalRegister(14, 'meas')

qc.add_register(q)
qc.add_register(meas)

qc.ry(3.11660197832289, q[0])
qc.ry(1.9092437973168, q[1])
qc.ry(1.83665402916141, q[2])
qc.ry(1.92828997350711, q[3])
qc.ry(1.56040438802366, q[4])
qc.ry(1.67650044099787, q[5])
qc.ry(np.pi, q[6])
qc.ry(-0.484684372019612, q[7])
qc.ry(-1.55824389634716, q[8])
qc.ry(-1.57032728548193, q[9])
qc.ry(-1.57068044538476, q[10])
qc.ry(1.57084762248624, q[11])
qc.ry(1.57085726068862, q[12])
qc.ry(1.57084872799031, q[13])
qc.cx(q[12], q[13])
qc.cx(q[11], q[12])
qc.ry(-3.14158037721381, q[13])
qc.cx(q[10], q[11])
qc.ry(-3.14158117693921, q[12])
qc.cx(q[9], q[10])
qc.ry(np.pi, q[11])
qc.cx(q[12], q[13])
qc.cx(q[8], q[9])
qc.ry(-1.25690802693412e-4, q[10])
qc.cx(q[11], q[12])
qc.ry(1.5706069159492, q[13])
qc.cx(q[7], q[8])
qc.ry(1.99988032836607e-4, q[9])
qc.cx(q[10], q[11])
qc.ry(-1.57067832351632, q[12])
qc.cx(q[6], q[7])
qc.ry(3.1305737028064, q[8])
qc.cx(q[9], q[10])
qc.ry(-1.57092096001889, q[11])
qc.cx(q[5], q[6])
qc.ry(2.05549013956867, q[7])
qc.cx(q[8], q[9])
qc.ry(1.57074761411704, q[10])
qc.cx(q[4], q[5])
qc.ry(1.57074987190045, q[6])
qc.cx(q[7], q[8])
qc.ry(-1.57159883863032, q[9])
qc.cx(q[3], q[4])
qc.ry(1.5709707997776, q[5])
qc.cx(q[6], q[7])
qc.ry(1.56486377213428, q[8])
qc.cx(q[2], q[3])
qc.ry(1.5707077912573, q[4])
qc.cx(q[5], q[6])
qc.ry(-1.57068951530184, q[7])
qc.cx(q[1], q[2])
qc.ry(-1.57097096583357, q[3])
qc.cx(q[4], q[5])
qc.ry(0.106056347332031, q[6])
qc.cx(q[0], q[1])
qc.ry(-1.57101104151202, q[2])
qc.cx(q[3], q[4])
qc.ry(3.13106037736717, q[5])
qc.ry(1.6516883297605, q[0])
qc.ry(1.57046381512143, q[1])
qc.cx(q[2], q[3])
qc.ry(2.7836095591851, q[4])
qc.cx(q[1], q[2])
qc.ry(-0.265522793520176, q[3])
qc.cx(q[0], q[1])
qc.ry(-0.338092188233879, q[2])
qc.ry(-1.48984605225397, q[0])
qc.ry(-1.59589372697576, q[1])
qc.measure(q[0], meas[0])
qc.measure(q[1], meas[1])
qc.measure(q[2], meas[2])
qc.measure(q[3], meas[3])
qc.measure(q[4], meas[4])
qc.measure(q[5], meas[5])
qc.measure(q[6], meas[6])
qc.measure(q[7], meas[7])
qc.measure(q[8], meas[8])
qc.measure(q[9], meas[9])
qc.measure(q[10], meas[10])
qc.measure(q[11], meas[11])
qc.measure(q[12], meas[12])
qc.measure(q[13], meas[13])

job = execute(qc, backend=backend, shots=shots)
job_result = job.result()
print(job_result.get_counts(qc))
